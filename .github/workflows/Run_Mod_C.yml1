name: Run Mod_C.py Script

on:
  # 触发条件：每隔5分钟执行一次
  schedule:
    - cron: '*/60 * * * *'
  # 允许手动触发
  workflow_dispatch:
  # 触发条件：当代码被推送到main分支时
  push:
    branches:
      - main

jobs:
  run-script:
    runs-on: ubuntu-latest
    env:
      LOCAL_VERSION: ${{ secrets.LOCAL_VERSION }}
      MOD_COOKIE: ${{ secrets.MOD_COOKIE }}
      CONFIG_JSON: ${{ secrets.CONFIG_JSON }}  # 从GitHub Secrets中获取环境变量
      URL_JSON: ${{ secrets.URL_JSON }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Create accounts.json from environment variable
      run: |
        echo "$CONFIG_JSON" > config.json
        echo "$URL_JSON" > url.json

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install beautifulsoup4
        pip install pynacl
        pip install pyunpack patool
        pip install py7zr

    - name: Run Mod_C.py script
      id: run-script
      run: |
        python Mod_C.py
        # 输出文件路径和版本号
        echo "file_path=$(cat file_path.txt)" >> $GITHUB_OUTPUT
        echo "version_number=$(cat version_number.txt)" >> $GITHUB_OUTPUT

    # - name: Download and install gh CLI
    #   run: |
    #     # 下载最新版本的预构建二进制文件
    #     wget https://github.com/cli/cli/releases/download/v1.14.0/gh_1.14.0_linux_amd64.tar.gz
    #     # 解压文件
    #     tar -xzf gh_1.14.0_linux_amd64.tar.gz
    #     # 将可执行文件移动到 PATH 中
    #     mv gh_1.14.0_linux_amd64 /usr/local/bin/
    #     # 清理临时文件
    #     rm gh_1.14.0_linux_amd64.tar.gz
    #     rm -rf gh_1.14.0_linux_amd64/

    # - name: Update Version Secret
    #   if: steps.run-script.outputs.version_number != ''
    #   run: |        # 使用 GitHub CLI (gh) 更新 secrets
    #     gh secret set LOCAL_VERSION --body "${{ steps.run-script.outputs.version_number }}"

    # - name: Setup Go environment
    #   uses: actions/setup-go@v4
    #   with:
    #     go-version: '1.19'  # gh CLI 需要 Go 环境
